# -*- coding: utf-8 -*-
"""Copy of Final Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IVTQsd8ycQ59UXOuSS3NZMBPyjE6r_Di
"""

import pickle
import warnings

import joblib
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

warnings.filterwarnings("ignore")

# Load the dataset
file_path = 'waterQuality21.csv'
data = pd.read_csv(file_path)

# Define the feature set based on the top features from MRMR
selected_features = ['cadmium', 'aluminium', 'arsenic', 'chromium', 'chloramine', 'perchlorate', 'nitrites', 'radium', 'viruses', 'silver', 'uranium', 'barium']
X = data[selected_features]
y = data['is_safe']

# Standardize the features
scaler = StandardScaler()
X_standardized = scaler.fit_transform(X)

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X_standardized, y, test_size=0.2, random_state=42)

# Load the saved model
model_filename = 'svm_model_12_features.joblib'
svm_model = joblib.load(model_filename)



def predict_water_safety(sample_data):
    sample_data = np.array(sample_data).reshape(1, -1)
    sample_data_standardized = scaler.transform(sample_data)
    prediction = svm_model.predict(sample_data_standardized)
    return 'Safe' if prediction == 1 else 'Not Safe'



pickle.dump(svm_model,open('model.pkl','wb'))
pickle.dump(scaler, open('scaler.pkl', 'wb'))
model = pickle.load(open('model.pkl','rb'))
scaler = pickle.load(open('scaler.pkl', 'rb'))
